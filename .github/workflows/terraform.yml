name: Terraform Apply

on:
  push:
    branches:
      - main # or the branch you want to trigger the workflow on

jobs:
  terraform:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.5.7

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      env:
        TF_VAR_tenant_id: ${{ secrets.TF_VAR_tenant_id }}
        TF_VAR_object_id: ${{ secrets.TF_VAR_object_id }}
      run: terraform apply -auto-approve

    - name: Deploy Function App
      run: |
        cd MyFunctionProj
        npm i -g azure-functions-core-tools@v4
        npm i
        output=$(func azure functionapp publish create-documents-fa --javascript)
        echo "$output"
    
        # Use grep and awk to extract the URL from the output
        func_url=$(echo "$output" | grep -Eo 'https://[a-zA-Z0-9./?=-]*')
        
        # Set the URL as an output variable
        echo "::set-output name=func_url::$func_url"
      env:
        FUNCTIONS_WORKER_RUNTIME: node

    - name: Test Function App
      run: |
        func_url="${{ steps.deploy.outputs.func_url }}"
        for i in {1..10}
        do
          echo "Attempt $i to call the function..."
          status_code=$(curl --write-out "%{http_code}" --silent --output /dev/null $func_url")
          if [[ "$status_code" -eq 200 ]] ; then
            echo "Successfully called the function!"
            exit 0
          else
            echo "Failed to call the function. Status code: $status_code"
            sleep 15  # wait for 15 seconds before retrying
          fi
        done
        echo "Failed to call the function after $i attempts"
        exit 1

    - name: Terraform Destroy
      if: always()
      env:
        TF_VAR_tenant_id: ${{ secrets.TF_VAR_tenant_id }}
        TF_VAR_object_id: ${{ secrets.TF_VAR_object_id }}
      run: terraform destroy -auto-approve

    - name: Azure Logout
      if: always()
      run: az logout
